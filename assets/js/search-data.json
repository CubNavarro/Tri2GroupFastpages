{
  
    
        "post0": {
            "title": "3.12-3.13 Homework/Hacks",
            "content": "3.12 Homework/Hacks part 2 . Part 2 1 is on the lesson of 3.1.2 part 1 . PROCEDURE find a () . { c -- 9 . b &lt;-- 9 * 9 a &lt;-- b * c . Print (a) . } . What is a? . cost ⟵ 173 tax - 10% . PROCEDURE applytax (cost, cpercentDiscounted) { temp &lt;-- 100 + percentTaxed . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost)} . What is the cost? . Tempature - 103 Degrees . PROCEDURE convet Fahrenheit (tempature) . { . Celsius &lt;-- tempature - 32 Celsius &lt;-- Celsius x 5/9 . Print (Celsius)} . 3.13 Homework/Hacks for Part 1 and Part 2 of the lesson . #1. Create a procedure that is meant to replace the top running backs yards per game in one season if the current running back has more yards per game . Necessary Parameters: toprbyardspg(100), currentrbyards(1260), totalGames(12) | . Click for hint Refer back to 3.13 Developing Procedures Part 1 #2. Write a procedure that will allow the A+ to get to the 1, while avoiding the black boxes. . Use what you learned about moving robots . . Click for hint Refer back to 3.13 Developing Procedures Part 1 Which Is the Correct Way to define the Name of a Procedure? . A. PROCEDURE MYLIST | B. PROCEDURE MyList | C. procedure mylist Click For Hint Remember the word procedure should be in all capitals and a part of the declared procedure should be in caps | . Write A Procedure That gets the BeachBall To the Green Square . . You Have Finished All the hacks Just Add a submisson to the comment in our fastpages under homework! . CHECKLIST! . 3.12 Hacks part 1 (on the lesson of 13.2 Part 1 ) | 3.12 Hacks part 2 | 3.1.3 Hacks Part 1 | 3.13 Hacks part 2 | .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/07/3.13-3.14-homework.html",
            "relUrl": "/markdown/2022/12/07/3.13-3.14-homework.html",
            "date": " • Dec 7, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Hackathon!",
            "content": "#### Now it is time to know what you know about procedures so with your table group you guys are going to write procedures for a chance of winning a prize . You will need 1 laptop | You and Your Group will have the maximum of 5 mins to complete this prompt | Open a File or a Place to code a procedure | In order to gain points you must get the procedure right and have all correct elements of a procedure | Since a procedure can have different orders you must | If you finish first and its correct 2pts | If you finish within the 5 miniuets and you are correct 1 pt | 1st Place/2nd Place Get Candy! | . Prompt #1 . Write A Procedure to get the character to the finish line | . Prompt 2 . Get the Person to the red block by writing a coding procedure | . # Prompt 3 CHALLENGE! . Write a Procedure that updates a the quiz score if you get a better score on the next quiz use these VARIABLES: INITAL SCORE = 50% RETAKE SCORE 56 OUT 60 Points | .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/06/hackathon.html",
            "relUrl": "/markdown/2022/12/06/hackathon.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "3.13 Developing Procedures Part 2",
            "content": "Essential Knowledge . Procedure-is a named group of programming instructions that serves a purpose | How to code Procedures-While Coding a procedure you must makes sure it has as name and a clear purpose weather to executre a response or complete an action | One common type of abstraction is procedrual abstraction, which provides a name for a process and allows a procedure to be only knowing what it doe,not how it does it. | The subdivision of a computer program into sepearate subprogrames is called modularity, | . Vocabulary . Modularity - the practice of breaking a complex program into smaller, independent parts or modules that can be used and reused in different parts of the program | . How do we make our procedure purposeful and consice . to make a procedure serve a purpose it should be able to hae multiple functions | Also to keep a procedure maximizing capability it should be simple and reduced to get the final result | . What is important to do while writing procedures . It is important to understand you procudeures procedure does when creating one as it will help you create a impactful procedure | . Procedure That Update Grade Based on retake . after you take a quiz your teacher lets you retake it for full credit in which your are able to replace your grade | TEST WITH first quiz GRADE is 40% and second is 90% | PROCEDURE updateGRADE { points, current grade,new grade currentGrade = current points /75 | currentGrade = current crade * 100 if currentGrade &gt; quizGrade | return currentGrade } | . | . | . How to change your procedures to add more elements into it . First we start off with this coding segment which shows us what we need to do Suppse we use numbers 74 35 40 | | . PROCEDURE updateQuiz (74,35,40) { | temp average = 0.875 | tempAverage = 87.5 | 87.5&gt;74 True } | This will return 87.5 Assume you will have to right this procedure for online grade system however they want you to create a procedure that will round the grade how will you do this. | . Update Function . This allows for the procedure to update to the answer to round it up | . # How get we get santa to the christmas tree using a procedure | . . Hint . PROCEDURE moveSanta{ move_left() move_forward() | . | move_forward() | move_right() | move_right() move_forward() | . | move_forward() | move_left() | move_left() | move_forward() | move_forward() move_right() | . | . | } | Is this the most effective way to make a zig zag through the blocks? | . .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/06/3.13-part2.html",
            "relUrl": "/markdown/2022/12/06/3.13-part2.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "3.13 Developing Procedures Part 1",
            "content": "Learning Objective . Develop procedural abstraction to manage a program by writing procedures | . Essential Knowledge . Procedure: is a named group of programming instructions that serves a purpose | Parameter: are input values of a procedur | There are two types of procedures, one that returns a value or some type of data and on that just executes a block of statements | . Creating a Procedure . When you are picking a name for the procedure it must be descriptive | See if you need any parameters for this procedure (what data do you need to accomplish my goal? What king of information am I going to need?) | 2 of the parameters in the example below could be the quizGrade and currentPoints (need this data) | . Example . If you retake a quiz and you get a higher grade than your original grade then your quiz grade will update to the recent grade | . Try it yourself . 1. Write a procedure that will rotate the robot below 180 degrees. . Tips: give it a descriptive name and use ROTATE_RIGHT() or ROTATE_LEFT() to turn left or right . 2. Write a procedure that will allow the robot to detour around the block by going to the left. . Tips: use the tips in the previous problems and Use MOVE_FOWARD() to more one spot foward . Answer . . | . |",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/05/3.13-part1.html",
            "relUrl": "/markdown/2022/12/05/3.13-part1.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3.12 Calling Procedures Part 2",
            "content": "Essential Knowledge . Procedures are that a catch-all term for codes used to identify what was done to or given to a patient | . If you have a set of statements in a procedure the statement will go thought the top of the procedure to the bottom in order. | . Practice Problem . Here is a practice problem that involves calling a procedure by haveing an imput and an output. This is a apply discout and apply tax procedure. . $80 item recives a 20% discount and a tax is 8% . PROCEDURE applyDiscount (cost, cpercentDiscounted) { temp &lt;-- 100 - percentDiscounted . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost) . } . PROCEDURE applytax (cost, cpercentDiscounted) { temp &lt;-- 100 + percentTaxed . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost) . } . Tempature Procedure . This procedure is used to Convet Fehrenheit to Celsius . What is 80 degrees in Celcsius? . PROCEDURE convet Fahrenheit (tempature) { . Celsius &lt;-- tempature - 32 Celsius &lt;-- Celsius x 5/9 Print (Celsius) . } .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/04/3.12-part2.html",
            "relUrl": "/markdown/2022/12/04/3.12-part2.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "3.12 Calling Procedures Part 1",
            "content": "Lesson 3.12 . What is a procedure and a parameter? . A procedure is a named group of programming instructions that may have parameters and return values. Procedures can be reffered to as method or function depending on the programing language. | A procedrure call interrupts an execution of statements and makes the program execute the statements in the procedure. | . | Parameters are input values of a procedure. | Argurments specifcy the values of the parameters when a procedure is called. | If you have a set of statements and inside there is a procedure then when it reaches that procedure it will excute that procedure and then go back to the rest of the statments. | If you see a return statement you automatically end the procedure even if there is more statements | . . Examples of procedures . Ex 1: A procedure call that does something but does not return a vallue (call a value back). . To return a value: procName (arg1, arg2,...) . Text: PROCEDURE procName(Parameter1,Parameter2,...) { RETURN (expression) }&lt;/p&gt; Block: . . Ex 2: This problem has a robot in a grid of squares. . Key: Robot = Triangle Black square = Wall White square = Freespace . This code uses the procedure detourRight(). . MOVE_FORWARD() | MOVE_FORWARD() | detourRight() | MOVE_FORWARD() | ROTATE_RIGHT() | . PROCEUDRE detourRight() | { | ROTATE_RIGHT() | MOVE_FORWARD() | ROTATE_LEFT() | MOVE_FORWARD() | MOVE_FORWARD | ROTATE_LEFT() | MOVE_FORWARD() | ROTATE_RIGHT | } | . . Homework . Problem 1: This problem involves parameters . Qais is writing code to calculate formulas from his math class. He&#39;s currently working on a procedure to calculate average speed, based on this formula: . Average speed= . Total Time/Total Distance ​ . Highlight which of these is the best procedure for calculating and displaying average speed. PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) } | . | . . Problem 2: Procedures with return values . James Hunter is looking through his classmate&#39;s program and sees a procedure called heightenEmotions: PROCEDURE heightenEmotions(myEmotion) . { moreEnergy ← CONCAT(myEmotion, &quot;!!!&quot;) . moreVolume ← UPPER(moreEnergy) . RETURN moreVolume } . That procedure manipulates strings using two built-in procedures, CONCAT for concatenating two strings together, and UPPER for converting a string to uppercase. . James Hunter then sees this line of code: . heightenEmotions(&quot;im mad&quot;) . After that line of code runs, will nothing be displayed? . True . False . . Problem 3: Procedures with return values . Bubz is writing a program to calculate the carbon footprint of his activities. The procedure calcFlightFootprint calculates the pounds of carbon dioxide produced per passenger in a flight that covers a given number of miles and seats a given number of passengers. . PROCEDURE calcFlightFootprint(numMiles, numPassengers) { CO2_PER_MILE ← 53.29 . carbonPerFlight ← numMiles * CO2_PER_MILE . carbonPerPassenger ← carbonPerFlight / numPassengers . RETURN carbonPerPassenger . } . Bubz wants to use that procedure to calculate the total footprint for his two upcoming flights: LA to NY: 2,451 miles and 118 passengers NY to London: 3,442 miles and 252 passengers . Which of these code snippets successfully calculates and stores her total footprint? Highlight 2 answers. . totalFootprint ← calcFlightFootprint(2451, 118) + calcFlightFootprint(3442, 252) . | totalFootprint ← calcFlightFootprint(2451, 118 + 3442, 252) . | | totalFootprint ← calcFlightFootprint((2451, 118) + (3442, 252)) . 4. laNyCarbon ← calcFlightFootprint(2451, 118) nyLondonCarbon ← calcFlightFootprint(3442, 252) totalFootprint ← laNyCarbon + nyLondonCarbon . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/04/3.12-part1.html",
            "relUrl": "/markdown/2022/12/04/3.12-part1.html",
            "date": " • Dec 4, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://cubnavarro.github.io/Tri2GroupFastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Schedule Maker",
          "content": "Schedule Maker . Add your activities | Organize your activities | Schedule times for activities Create A Schedule! . | . Activities: Choose a Day: Apply Save . | Monday Tuesday Wednesday Thursday Friday Saturday Sunday | Apply | Save | . . . Monday Tuesday Wednesday Thursday Friday Saturday Sunday . | | | | | | | . . function displayDayOfWeek() { var d = new Date(); var days = [“Sunday”, “Monday”, “Tuesday”, “Wednesday”, “Thursday”, “Friday”, “Saturday”]; var day = days[d.getDay()]; document.getElementById(“days”).innerHTML = “Today is “ + day + “ these are your tasks:”; } setInterval(displayDayOfWeek, 1000); . function tasks() { var d = new Date(); var days = [“Sunday”, “Monday”, “Tuesday”, “Wednesday”, “Thursday”, “Friday”, “Saturday”]; var day = days[d.getDay()]; switch (day) { case “Monday”: document.getElementById(“tasks”).innerText = document.getElementById(“monday”).innerText; break; case “Tuesday”: document.getElementById(“tasks”).innerText = document.getElementById(“tuesday”).innerText; break; case “Wednesday”: document.getElementById(“tasks”).innerText = document.getElementById(“wednesday”).innerText; break; case “Thursday”: document.getElementById(“tasks”).innerText = document.getElementById(“thursday”).innerText; break; case “Friday”: document.getElementById(“tasks”).innerText = document.getElementById(“friday”).innerText; break; case “Saturday”: document.getElementById(“tasks”).innerText = document.getElementById(“saturday”).innerText; break; case “Sunday”: document.getElementById(“tasks”).innerText = document.getElementById(“sunday”).innerText; break; } } .",
          "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/",
          "relUrl": "/markdown/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://cubnavarro.github.io/Tri2GroupFastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}