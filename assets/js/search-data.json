{
  
    
        "post0": {
            "title": "Hackathon!",
            "content": "#### Now it is time to know what you know about procedures so with your table group you guys are going to write procedures for a chance of winning a prize . You will need 1 laptop | You and Your Group will have the maximum of 5 minuets to complete this prompt | Open a File or a Place to code a procedure | In order to gain points you must get the procedure right and have all correct elements of a procedure | If you finish first and its correct 2pts | If you finish within the 5 miniuets and you are correct 1 pt | You can only get your answer checked 2 times if you get it wrong both times its checked you automatically fail the challenge for that prompt. | . Prompt #1 . Write A Procedure to get the character to the finish line | . Prompt 2 . Get the Person to the red block by writing a coding procedure | . # Prompt 3 . Write a Procedure that updates a the quiz score if you get a better score on the next quiz use these VARIABLES: INITAL SCORE = 25 RETAKE SCORE 56 OUR OF 60 Points | .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/06/hackathon.html",
            "relUrl": "/markdown/2022/12/06/hackathon.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "3.13-3.14 Homework/Hacks",
            "content": "",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/06/3.13-3.14-homework.html",
            "relUrl": "/markdown/2022/12/06/3.13-3.14-homework.html",
            "date": " • Dec 6, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Developing Procedures 3.13 Part 2",
            "content": "Essential Knowledge . Procedure-is a named group of programming instructions that serves a purpose | How to code Procedures-While Coding a procedure you must makes sure it has as name and a clear purpose weather to executre a response or complete an action | One common type of abstraction is procedrual abstraction, which provides a name for a process and allows a procedure to be only knowing what it doe,not how it does it. | The subdivision of a computer program into sepearate subprogrames is called modularity, | . How do we make our procedure purposeful and consice . to make a procedure serve a purpose it should be able to hae multiple functions | Also to keep a procedure maximizing capability it should be simple and reduced to get the final result | . What is important to do while writing procedures . It is important to understand you procudeures procedure does when creating one as it will help you create a impactful procedure | . Procedure That Update Grade Based on retake . after you take a quiz your teacher lets you retake it for full credit in which your are able to replace your grade | TEST WITH first quiz GRADE is 40% and second is 90% | PROCEDURE updateGRADE { points, current grade,new grade currentGrade = current points /75 | currentGrade = current crade * 100 if currentGrade &gt; quizGrade | return currentGrade } | . | . | . How to change your procedures to add more elements into it . First we start off with this coding segment which shows us what we need to do Suppse we use numbers 74 35 40 | | . PROCEDURE updateQuiz (74,35,40) { | temp average = 0.875 | tempAverage = 87.5 | 87.5&gt;74 True } | This will return 87.5 | However Suppose we CANNOT accept decimals how would we do this? | . Update Function . | . Why are Procedures Important . Procedures are significant in a program as they can be manipulated to complete tasks and function as you saw with the previous problem. | .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/05/3.13-part2.html",
            "relUrl": "/markdown/2022/12/05/3.13-part2.html",
            "date": " • Dec 5, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Calling Procedures 3.12 Part 2",
            "content": "Procedures . Procedures are that a catch-all term for codes used to identify what was done to or given to a patient . A $80 item recives a 20% discount and a tax is 8% . PROCEDURE applyDiscount (cost, cpercentDiscounted) { temp &lt;-- 100 - percentDiscounted . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost) . } . PROCEDURE applytax (cost, cpercentDiscounted) { temp &lt;-- 100 + percentTaxed . temp &lt;-- temp / 100 cost &lt;-- cost x temp Print(cost) . } . Tempature Procedure . This procedure is used to Convet Fehrenheit to Celsius . What is 80 degrees in Celcsius? . PROCEDURE convet Fahrenheit (tempature) { Celsius &lt;-- tempature - 32 Celsius &lt;-- Celsius x 5/9 Print (Celsius) } . Drawing Squares . Procedure Call . drawsquare (xPos, yPos, sidelength) . This draws a square starting in the bottom left corner (xPos, yPos) on the grid with the sidelength . x &lt;-- x + B . y &lt;-- y + B . This equation tells how much to move the square left or right, up or down by B. . x &lt;-- 2 y &lt;--3 s &lt;-- 4 drawSquare(x,y,s) . x &lt;-- x+2 y &lt;-- y-1 . drawSqaure(x,y,s) .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/04/3.12-part2.html",
            "relUrl": "/markdown/2022/12/04/3.12-part2.html",
            "date": " • Dec 4, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "3.12 Calling Procedures Lesson",
            "content": "Lesson 3.12 . What is a procedure and a parameter? . A procedure is a named group of programming instructions that may have parameters and return values. Procedures can be reffered to as method or function depending on the programing language. | A procedrure call interrupts an execution of statements and makes the program execute the statements in the procedure. | . | Parameters are input values of a procedure. | Argurments specifcy the values of the parameters when a procedure is called. | If you have a set of statements and inside there is a procedure then when it reaches that procedure it will excute that procedure and then go back to the rest of the statments. | If you see a return statement you automatically end the procedure even if there is more statements | . . Examples of procedures . Ex 1: A procedure call that does something but does not return a vallue (call a value back). . To return a value: procName (arg1, arg2,...) . Text: PROCEDURE procName(Parameter1,Parameter2,...) { RETURN (expression) }&lt;/p&gt; Block: . . Ex 2: This problem has a robot in a grid of squares. . Key: Robot = Triangle Black square = Wall White square = Freespace . This code uses the procedure detourRight(). . MOVE_FORWARD() | MOVE_FORWARD() | detourRight() | MOVE_FORWARD() | ROTATE_RIGHT() . | PROCEUDRE detourRight() . | { | ROTATE_RIGHT() | MOVE_FORWARD() | ROTATE_LEFT() | MOVE_FORWARD() | ROTATE_LEFT() | MOVE_FORWARD() | ROTATE_RIGHT | } | . answer ![](/Tri2GroupFastpages/images/copied_from_nb/Robot2.png) . Homework . Problem 1: Procedures in procedures . Code below uses the procedure summarize (number A, number B) which uses the procedure min (num 1, num 2) . (-8 = num1) | (-12 = num2) . | summarize (-8,-12) . IF (num1 &lt; num2) . { . RETURN (num1) . } . | . RETURN (num2) . } . PROCEDURE summarize (numberA, numberB) . { . minimum&lt;-min(numberA, numberB) . DISPLAY (&quot;The minimum number is&quot;) . PROCEDURE min (num1,num2) . { . . Problem 2: This problem involves parameters . Qais is writing code to calculate formulas from his math class. He&#39;s currently working on a procedure to calculate average speed, based on this formula: . Average speed= . Total Time/Total Distance ​ . Highlight which of these is the best procedure for calculating and displaying average speed. PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance) { DISPLAY (distance/time) } | PROCEDURE calcAvgSpeed (distance, time) { DISPLAY (time/distance) } | . | . . Problem 3: Procedures with return values . James Hunter is looking through his classmate&#39;s program and sees a procedure called heightenEmotions: PROCEDURE heightenEmotions(myEmotion) . { moreEnergy ← CONCAT(myEmotion, &quot;!!!&quot;) . moreVolume ← UPPER(moreEnergy) . RETURN moreVolume } . That procedure manipulates strings using two built-in procedures, CONCAT for concatenating two strings together, and UPPER for converting a string to uppercase. . James Hunter then sees this line of code: . heightenEmotions(&quot;im mad&quot;) . After that line of code runs, will nothing be displayed? . True . False . . Problem 4: Procedures with return values . Bubz is writing a program to calculate the carbon footprint of his activities. The procedure calcFlightFootprint calculates the pounds of carbon dioxide produced per passenger in a flight that covers a given number of miles and seats a given number of passengers. . PROCEDURE calcFlightFootprint(numMiles, numPassengers) { CO2_PER_MILE ← 53.29 . carbonPerFlight ← numMiles * CO2_PER_MILE . carbonPerPassenger ← carbonPerFlight / numPassengers . RETURN carbonPerPassenger . } . Bubz wants to use that procedure to calculate the total footprint for his two upcoming flights: LA to NY: 2,451 miles and 118 passengers NY to London: 3,442 miles and 252 passengers . Which of these code snippets successfully calculates and stores her total footprint? Highlight 2 answers. . totalFootprint ← calcFlightFootprint(2451, 118) + calcFlightFootprint(3442, 252) . | totalFootprint ← calcFlightFootprint(2451, 118 + 3442, 252) . | | totalFootprint ← calcFlightFootprint((2451, 118) + (3442, 252)) . 4. laNyCarbon ← calcFlightFootprint(2451, 118) nyLondonCarbon ← calcFlightFootprint(3442, 252) totalFootprint ← laNyCarbon + nyLondonCarbon . &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Assignment 2 . If the procedure that you are calling returns some kind of data like a number or a Boolean, then you will assign that value to a variable | You want your procedure to be well named, so it describes the purpose of what it does | Before you call a procedure ask the questions: Does the procedure call require arguments? What type of data does the procedure return? | . . &lt;/div&gt; .",
            "url": "https://cubnavarro.github.io/Tri2GroupFastpages/markdown/2022/12/04/3.12-part1.html",
            "relUrl": "/markdown/2022/12/04/3.12-part1.html",
            "date": " • Dec 4, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://cubnavarro.github.io/Tri2GroupFastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://cubnavarro.github.io/Tri2GroupFastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}